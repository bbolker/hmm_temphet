\documentclass{article}

\begin{document}

\section*{Additional files}

  In the main text of this manuscript, we showed the fitting and simulating results for Cat 1. Here, we have the adjusted BIC emission distribution comparisons, adjusted BIC across all FMM and HMM models, diurnal step lengths and autocorrelation plots for Cat 2, 14, and 15. Given we have not account for sex, we can see in that our fitting and predictions are better for male cats (Cat 1 and 2) than female cats (Cat 14, 15). 
  
\newpage


<<pkgs,message=FALSE,warning=FALSE,echo=FALSE>>=
library("ggplot2"); theme_set(theme_bw())
scale_colour_discrete <- function(...,palette="Set1")
    scale_colour_brewer(...,palette=palette)
scale_fill_discrete <- function(...,palette="Set1")
    scale_fill_brewer(...,palette=palette)
zmargin <- theme(panel.margin=grid::unit(0,"lines"))
library("knitr")
opts_chunk$set(fig.width=6,fig.height=4)
## fix complaints about "incompatible color definition" from xcolor ...
## http://tex.stackexchange.com/questions/148188/knitr-xcolor-incompatible-color-definition
knit_hooks$set(document = function(x) {sub('\\usepackage[]{color}', '\\usepackage{xcolor}', x, fixed = TRUE)})
library("depmixS4")
library("plyr")
library("dplyr")
library("reshape2")
library("gridExtra")
library("RColorBrewer")
if (!require("ggalt") || length(find("geom_encircle"))==0) {
#     cat("installing ggalt from BB repo ...\n")
    try(detach("package:ggalt"),silent=TRUE)
    devtools::install_github("hrbrmstr/ggalt")
    library("ggalt")
}
@

<<sim_results, warning=FALSE,echo=FALSE,message=FALSE,fig.cap="BIC-optimal state frequency for 2-6 state HMMs with and without covariate transition on 100 two-state hidden Markov models with covariate transitioning simulations.",eval=TRUE>>=
ICdat <- readRDS("../simsin_results/ICdat.rds")

ICdat <- (ICdat 
          %>% ungroup() 
          %>% mutate(model=factor(model,
                         levels=c("HMM","HMMsin"),
                         labels=c("Homogeneous","Heterogeneous")))
          %>% filter(IC == "BIC")
)
simsin <- (ggplot(ICdat,aes(x=nstates,y=n,color=model,shape=model))+
    geom_line() +
    geom_point(size=3,bg="white") +
    scale_shape_manual(values=c(21,16))+
    scale_colour_brewer(palette="Set1")+
    ggtitle("2-state HMM with Time-dependent Transition")+
    labs(y="Counts",x="BIC-optimal number of states")+
    theme(legend.position="none"))


ICdat <- readRDS("../sim_results/ICdat.rds")

ICdat <- (ICdat 
          %>% ungroup() 
          %>% mutate(model=factor(model,
                         levels=c("HMM","HMMsin"),
                         labels=c("Homogeneous","Heterogeneous")))
          %>% filter(IC == "BIC")
)
simgps <- (ggplot(ICdat,aes(x=nstates,y=n,color=model,shape=model))+
    geom_line() +
    geom_point(size=3,bg="white") +
    scale_shape_manual(values=c(21,16))+
    scale_colour_brewer(palette="Set1")+
    ggtitle("2-state HMM with GPS Error")+
    labs(y="Counts",x="BIC-optimal number of states")+
      theme(legend.position="none"))


ICdat <- readRDS("../simtime_results/ICdat.rds")

ICdat <- (ICdat 
          %>% ungroup() 
          %>% mutate(model=factor(model,
                         levels=c("HMM","HMMsin"),
                         labels=c("Homogeneous","Heterogeneous")))
          %>% filter(IC == "BIC")
)
simtimegps <- (ggplot(ICdat,aes(x=nstates,y=n,color=model,shape=model))+
    geom_line() +
    geom_point(size=3,bg="white") +
    scale_shape_manual(values=c(21,16))+
    scale_colour_brewer(palette="Set1")+
    ggtitle("2-state HMM with Time-dependent Transition and GPS Error")+
    labs(y="Counts",x="BIC-optimal number of states")+
      theme(legend.position="none"))

print(grid.arrange(simsin,simgps,simtimegps,ncol=2))
    

@

\clearpage
<<BICred_plot,warning=FALSE,echo=FALSE,message=FALSE,fig.cap="Adjusted Bayesian information criterion values for 3-7 state HMMs with different step-length distributions, with and without temporal transitions and turning angles.",fig.width=6,fig.height=4,eval=TRUE>>=
allmodsumdf2 <- readRDS("../summary_stats/cat.1.df.RDS")$multimoddf
df2 <- transform(allmodsumdf2, #change allmodsumdf to allmodsumdf2
            distrib=ifelse(grepl("W",model),"Weibull","log-Normal"),
            turn_angle=ifelse(grepl("VM",as.character(model)),"yes","no"),
            homog=ifelse(grepl("TH",type),"Time-heterogeneous","Homogeneous"))
slname <- "Step-length\ndistribution"
(ggplot(df2, aes(x=nstates,y=deltaBIC,size=distrib,
                 colour=distrib,lty=turn_angle))
    + geom_line()
    + facet_wrap(~ homog)
    + scale_colour_brewer(name=slname,palette="Set1")
    + scale_size_manual(name=slname,values=c(1.75,0.75))
    ## scale_size_continuous( name="# parameters") +
    #    geom_point(aes(size=parameters))+
    + scale_linetype(name="von Mises\nturning angle?")
    + labs(y=expression(Delta*"BIC"),
         x="Number of States")
    + geom_hline(yintercept=0,colour="gray")
    + zmargin)
@

\clearpage

<<adj_BIC_comparisons, warning=FALSE, echo=FALSE, message=FALSE,fig.cap="Adjusted BIC by number of free parameters for HMM model types. The left panel shows FMM, temporally heterogeneous FMM with a sinusoidal prior and HMM. The right panel shows HMMs with different temporal transitions.",fig.width=8,eval=TRUE>>=
#L <- load("cat1sumdat.RData")

linetypev <- c(rep(2,2),rep(1,5))
sumdat <- transform(readRDS("../summary_stats/cat.1.df.RDS")$HMMsumdf,
                     mod = ifelse(type=="HMM + TH","HMM + TH","FMMs and HMM")
)
linetypev <- c(rep(2,2),rep(1,5))
(adj_BIC_plot <- ggplot(sumdat, aes(x=nstates
                                  , y=deltaBIC
                                  , colour=model
                                  , linetype=model
                                  , group=model))
   + facet_wrap(~mod,ncol = 2,scales = "free_x")
   + scale_size_continuous(name="# of states")
   # + scale_x_continuous(breaks=seq(0,300,by=30))
   + geom_point()
   + scale_linetype_manual(values=linetypev, name="Model")
   + scale_colour_brewer(palette="Dark2", name="Model")
   # + scale_shape_discrete(name="Number of states")
   + scale_alpha_continuous(name="Number of states")
   + labs(y=expression(paste(Delta, "BIC"))
          , x="Number of parameters") 
   + geom_line()
   + zmargin)

#print(adj_BIC_plot)
@

\clearpage

<<avg_step_length_by_time, message=FALSE, echo=FALSE, warning=FALSE,fig.cap="Average step length by time of day observed (gray highlight), three-state HMM Viterbi predictions (V points), and all transitions type HMMs predictions (out of sample) with their respective BIC-optimal states.",fig.width=8,eval=TRUE>>=

avgdf <- readRDS("../summary_stats/cat.1.df.RDS")$avgplotdf
obsdf <- (readRDS("../summary_stats/cat.1.RDS") 
  %>% dplyr::select(c(LogDist,Time)) 
  %>% filter(!is.na(LogDist)) 
  %>% group_by(Time) 
  %>% summarise_each(funs(mean,sd))
  %>% transmute(time=Time,model="Observed",steplen=mean,smin=mean-2*sd,smax=mean+2*sd)
)
vit <- readRDS("../summary_stats/cat.1.vit.RDS")
vitdf <- (vit %>% dplyr::select(c(viterbi,time))
  %>% group_by(time)
  %>% summarise_each(funs(mean))
  %>% mutate(model="homogeneous (n=3)")
)

vitdf2 <- vitdf %>% transmute(time=time,variable="viterbi",value=viterbi)

mnames <- c("fmm5","fmmsin4","hmm6","hmmblock4","hmmhourly3",
            "hmmquad5","hmmsin5","obs","viterbi")
mnames2 <- c("FMM-homogeneous  (n=5)"
             , "FMM-sin (n=4)"
             , "HMM-homogeneous (n=6)"
             , "HMM-block (n=4)"
             , "HMM-hourly (n=3)"
             , "HMM-quadratic (n=5)"
             , "HMM-sin (n=5)"
             , "Observed"
             , "viterbi homogenous (n=3)"
             )

combdf <- (rbind(avgdf,vitdf2)
           %>% transmute(time=time,model=variable,steplen=value)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2)
                      , smin=steplen,smax=steplen)
)

combdf2 <- rbind(combdf,obsdf)
linetypev <- c(rep(c(2,1),c(2,5))
                ,1,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"))
             ,"black","black"
            )

lwdvec <- c(rep(c(1),c(7))
             ,1,4
            )
alphavec <- c(rep(0,7)
               ,0.1,0
              )

shapevec <- c(rep(32,8),118)

avg_plot <- ggplot(combdf2,aes(x=time))
print(avg_plot 
  + geom_ribbon(aes(ymin=smin,ymax=smax,alpha=model))
  + geom_line(aes(y=steplen,linetype=model,colour=model))
  + scale_colour_manual(values=colvec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + geom_point(aes(y=steplen,colour=model,shape=model,lwd=model))
  + scale_shape_manual(values=shapevec,name="Model")
  + ylab(expression('Mean step length'~(log[10]*m)))
  + xlab("Time of Day") 
)

# print(avg_plot)
@

\clearpage

<<acf_plot, message=FALSE, echo=FALSE, warning=FALSE,fig.cap="Autocorrelation of observed (gray highlight), three-state HMM Viterbi predictions (V points), and all transitions type HMMs predictions (out of sample) with their respective BIC-optimal states ",eval=TRUE>>=
acffun <- function(sim){
  a <- acf(sim,na.action=na.pass,plot=FALSE)
  df <- data.frame(ACF=c(a$acf),lag=a$lag)
  return(df)
}
vitacf <- (vit %>% dplyr::select(-c(time,obs))%>%ldply(.,acffun) %>% mutate(model=.id)
)

acfdf <- (readRDS("../summary_stats/cat.1.df.RDS")$acfdf 
          %>% mutate(model = .id)
)

combacfdf <- (rbind(acfdf,vitacf)
           %>% transmute(lag=lag,model=model,ACF=ACF)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2))
)

linetypev <- c(rep(c(2,1),c(2,6))
                ,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"),"black")
             ,"black"
            )
lwdvec <- c(rep(c(1,4),c(7,1))
             ,4
            )
alphavec <- c(rep(c(1,0.2),c(7,1))
               ,1
              )

shapevec <- c(rep(32,8),118)

(acf_plot <- ggplot(combacfdf,aes(x=lag,y=ACF,colour=model,
                  lwd=model,alpha=model,linetype=model,shape=model))
  + geom_point()
  + geom_line()
  + xlab("Lag") 
  + ylab("Autocorrelation")
  + scale_shape_manual(values=shapevec, name="Model")
  + scale_colour_manual(values=colvec, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
) 
print(acf_plot)
## vitacf messes up legend ...
@

\clearpage
<<r msdlist,message=FALSE, echo=FALSE, fig.cap="State identification plot with log mean and standard deviation of BIC-optimal HMM and HMM with sinusoidal transition.", warning=FALSE,eval=TRUE>>=
get_cat_pars2 <- function(catid){
  templist <- readRDS(paste("../summary_stats/cat.",catid,".df.RDS",sep=""))
  moddf <- templist$msdlist
  
  df <- data.frame(catID = catid
          , log_mean = c(unlist(moddf[1]),unlist(moddf[3]))
          , log_sd = c(unlist(moddf[2]),unlist(moddf[4]))
          , Model = c(rep("HMM",length(unlist(moddf[1]))),rep("HMM+TH(sin)",length(unlist(moddf[3]))))
  )
  return(df)
}

all_cat_pars2 <- ldply(lme4:::namedList(1,2,14,15),get_cat_pars2)
levels(all_cat_pars2$Model) <- c("homogeneous","heterogeneous (sin)")
g0 <- ggplot(all_cat_pars2,
             aes(10^log_mean,log_sd*10^log_mean,color=Model,shape=Model))+
    scale_x_log10()+scale_y_log10()+
    labs(x="mean step length (m)",y="sd of step length (m)")+
    scale_shape_manual(values=c(21,16)) +
    geom_line() +
    geom_point(bg="white")+
    facet_wrap(~catID,labeller=label_both)+zmargin
(all_msd_plot <- g0 +
     geom_encircle(data=subset(all_cat_pars2,
                               (catID=="15" & log_mean<1.5) |
                               (catID!="15" & log_mean<1.8)),
                   colour="black",linetype=2,expand=0.05,
                   group=1))

# print(all_msd_plot)
@

\clearpage

Everything Below goes into the appendix

<<BICred_plot2,warning=FALSE,echo=FALSE,message=FALSE,fig.width=6,fig.height=4,fig.cap="Adjusted BIC Emission Distribution Comparison for Cat 2">>=

allmodsumdf2 <- readRDS("../summary_stats/cat.2.df.RDS")$multimoddf
df2 <- transform(allmodsumdf2, #change allmodsumdf to allmodsumdf2
            distrib=ifelse(grepl("W",model),"Weibull","log-Normal"),
            turn_angle=ifelse(grepl("VM",as.character(model)),"yes","no"),
            homog=ifelse(grepl("TH",type),"Time-heterogeneous","Homogeneous"))
slname <- "Step-length\ndistribution"
(ggplot(df2, aes(x=nstates,y=deltaBIC,size=distrib,
                 colour=distrib,lty=turn_angle))
    + geom_line()
    + facet_wrap(~ homog)
    + scale_colour_brewer(name=slname,palette="Set1")
    + scale_size_manual(name=slname,values=c(1.75,0.75))
    ## scale_size_continuous( name="# parameters") +
    #    geom_point(aes(size=parameters))+
    + scale_linetype(name="von Mises\nturning angle?")
    + labs(y=expression(Delta*"BIC"),
         x="Number of States")
    + geom_hline(yintercept=0,colour="gray")
    + zmargin)
@

\clearpage
<<adj_BIC_comparisons2, warning=FALSE, echo=FALSE, message=FALSE,fig.cap="Adjusted BICs Across All Models for Cat 2",fig.width=8>>=
#L <- load("cat1sumdat.RData")

linetypev <- c(rep(2,2),rep(1,5))
sumdat <- transform(readRDS("../summary_stats/cat.2.df.RDS")$HMMsumdf,
                     mod = ifelse(type=="HMM + TH","HMM + TH","FMMs and HMM")
)
linetypev <- c(rep(2,2),rep(1,5))
(adj_BIC_plot <- ggplot(sumdat, aes(x=nstates
                                  , y=deltaBIC
                                  , colour=model
                                  , linetype=model
                                  , group=model))
   + facet_wrap(~mod,ncol = 2,scales = "free_x")
   + scale_size_continuous(name="# of states")
   # + scale_x_continuous(breaks=seq(0,300,by=30))
   + geom_point(aes(shape=factor(nstates),alpha=nstates))
   + scale_linetype_manual(values=linetypev, name="Model")
   + scale_colour_brewer(palette="Dark2", name="Model")
   + scale_shape_discrete(name="Number of states")
   + scale_alpha_continuous(name="Number of states")
   + labs(y=expression(paste(Delta, "BIC"))
          , x="Number of parameters") 
   + geom_line()
   + zmargin)
@

\clearpage

<<avg_step_length_by_time2, message=FALSE, echo=FALSE, warning=FALSE,fig.width=8,fig.cap="Diurnal Step Lengths Plot for Cat 2">>=

avgdf <- readRDS("../summary_stats/cat.2.df.RDS")$avgplotdf
obsdf <- (readRDS("../summary_stats/cat.2.RDS") 
  %>% dplyr::select(c(LogDist,Time)) 
  %>% filter(!is.na(LogDist)) 
  %>% group_by(Time) 
  %>% summarise_each(funs(mean,sd))
  %>% transmute(time=Time,model="Observed",steplen=mean,smin=mean-2*sd,smax=mean+2*sd)
)

vit <- readRDS("../summary_stats/cat.2.vit.RDS")
vitdf <- (vit %>% dplyr::select(c(viterbi,time))
  %>% group_by(time)
  %>% summarise_each(funs(mean))
  %>% mutate(model="homogeneous (n=3)")
)

vitdf2 <- vitdf %>% transmute(time=time,variable="viterbi",value=viterbi)

mnames <- c("fmm4","fmmsin4","hmm5","hmmblock4","hmmhourly3",
            "hmmquad4","hmmsin4","obs","viterbi")
mnames2 <- c("Fmm-homogeneous  (n=4)"
             , "Fmm-sin (n=4)"
             , "HMM-homogeneous (n=5)"
             , "HMM-block (n=4)"
             , "HMM-hourly (n=3)"
             , "HMM-quadratic (n=4)"
             , "HMM-sin (n=4)"
             , "Observed"
             , "Viterbi homogenous (n=3)")
combdf <- (rbind(avgdf,vitdf2)
           %>% transmute(time=time,model=variable,steplen=value)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2)
                      , smin=steplen,smax=steplen)
)

combdf2 <- rbind(combdf,obsdf)
linetypev <- c(rep(c(2,1),c(2,5))
                ,1,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"))
             ,"black","black"
            )

lwdvec <- c(rep(c(1),c(7))
             ,1,4
            )
alphavec <- c(rep(0,7)
               ,0.1,0
              )

shapevec <- c(rep(32,8),118)

avg_plot <- ggplot(combdf2,aes(x=time))
(avg_plot 
  + geom_ribbon(aes(ymin=smin,ymax=smax,alpha=model))
  + geom_line(aes(y=steplen,linetype=model,colour=model))
  + scale_colour_manual(values=colvec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + geom_point(aes(y=steplen,colour=model,shape=model,lwd=model))
  + scale_shape_manual(values=shapevec,name="Model")
  + ylab(expression('Mean step length'~(log[10]*m)))
  + xlab("Time of Day") 
)


@

\clearpage

<<acf_plot2, message=FALSE, echo=FALSE, warning=FALSE,fig.cap="Autocorrelation Plot for Cat 2">>=
acffun <- function(sim){
  a <- acf(sim,na.action=na.pass,plot=FALSE)
  df <- data.frame(ACF=c(a$acf),lag=a$lag)
  return(df)
}
vitacf <- (vit %>% dplyr::select(-c(time,obs))%>%ldply(.,acffun) %>% mutate(model=.id)
)

acfdf <- (readRDS("../summary_stats/cat.2.df.RDS")$acfdf 
          %>% mutate(model = .id)
)

combacfdf <- (rbind(acfdf,vitacf)
           %>% transmute(lag=lag,model=model,ACF=ACF)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2))
)


linetypev <- c(rep(c(2,1),c(2,6))
                ,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"),"black")
             ,"black"
            )
lwdvec <- c(rep(c(1,4),c(7,1))
             ,4
            )
alphavec <- c(rep(c(1,0.2),c(7,1))
               ,1
              )

shapevec <- c(rep(32,8),118)


(ggplot(combacfdf,aes(x=lag,y=ACF,colour=model,
                  lwd=model,alpha=model,linetype=model,shape=model))
  + geom_point()
  + geom_line()
  + xlab("Lag") 
  + ylab("Autocorrelation")
  + scale_shape_manual(values=shapevec, name="Model")
  + scale_colour_manual(values=colvec, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
) 

## vitacf messes up legend ...
@


\clearpage
%cat14

<<BICred_plot14,warning=FALSE,echo=FALSE,message=FALSE,fig.width=6,fig.height=4,fig.cap="Adjusted BIC Emission Distribution Comparison for Cat 14">>=

allmodsumdf2 <- readRDS("../summary_stats/cat.14.df.RDS")$multimoddf
df2 <- transform(allmodsumdf2, #change allmodsumdf to allmodsumdf2
            distrib=ifelse(grepl("W",model),"Weibull","log-Normal"),
            turn_angle=ifelse(grepl("VM",as.character(model)),"yes","no"),
            homog=ifelse(grepl("TH",type),"Time-heterogeneous","Homogeneous"))
slname <- "Step-length\ndistribution"
(ggplot(df2, aes(x=nstates,y=deltaBIC,size=distrib,
                 colour=distrib,lty=turn_angle))
    + geom_line()
    + facet_wrap(~ homog)
    + scale_colour_brewer(name=slname,palette="Set1")
    + scale_size_manual(name=slname,values=c(1.75,0.75))
    ## scale_size_continuous( name="# parameters") +
    #    geom_point(aes(size=parameters))+
    + scale_linetype(name="von Mises\nturning angle?")
    + labs(y=expression(Delta*"BIC"),
         x="Number of States")
    + geom_hline(yintercept=0,colour="gray")
    + zmargin)
@


\clearpage

<<adj_BIC_comparisons14, warning=FALSE, echo=FALSE, message=FALSE,,fig.width=8,fig.cap="Adjusted BICs Across All Models for Cat 14">>=
#L <- load("cat1sumdat.RData")

linetypev <- c(rep(2,2),rep(1,5))
sumdat <- transform(readRDS("../summary_stats/cat.14.df.RDS")$HMMsumdf,
                     mod = ifelse(type=="HMM + TH","HMM + TH","FMMs and HMM")
)
linetypev <- c(rep(2,2),rep(1,5))
(adj_BIC_plot <- ggplot(sumdat, aes(x=nstates
                                  , y=deltaBIC
                                  , colour=model
                                  , linetype=model
                                  , group=model))
   + facet_wrap(~mod,ncol = 2,scales = "free_x")
   + scale_size_continuous(name="# of states")
   # + scale_x_continuous(breaks=seq(0,300,by=30))
   + geom_point(aes(shape=factor(nstates),alpha=nstates))
   + scale_linetype_manual(values=linetypev, name="Model")
   + scale_colour_brewer(palette="Dark2", name="Model")
   + scale_shape_discrete(name="Number of states")
   + scale_alpha_continuous(name="Number of states")
   + labs(y=expression(paste(Delta, "BIC"))
          , x="Number of parameters") 
   + geom_line()
   + zmargin)
@

\clearpage

<<avg_step_length_by_time14, message=FALSE, echo=FALSE, warning=FALSE,fig.width=8,fig.cap="Diurnal Step Lengths Plot for Cat 14">>=

avgdf <- readRDS("../summary_stats/cat.14.df.RDS")$avgplotdf
obsdf <- (readRDS("../summary_stats/cat.14.RDS") 
  %>% dplyr::select(c(LogDist,Time)) 
  %>% filter(!is.na(LogDist)) 
  %>% group_by(Time) 
  %>% summarise_each(funs(mean,sd))
  %>% transmute(time=Time,model="Observed",steplen=mean,smin=mean-2*sd,smax=mean+2*sd)
)
vit <- readRDS("../summary_stats/cat.14.vit.RDS")
vitdf <- (vit %>% dplyr::select(c(viterbi,time))
  %>% group_by(time)
  %>% summarise_each(funs(mean))
  %>% mutate(model="homogeneous (n=3)")
)

vitdf2 <- vitdf %>% transmute(time=time,variable="viterbi",value=viterbi)

mnames <- c("fmm4","fmmsin3","hmm5","hmmblock4","hmmhourly3",
            "hmmquad5","hmmsin4","obs","viterbi")
mnames2 <- c("Fmm-homogeneous  (n=4)"
             , "Fmm-sin (n=3)"
             , "HMM-homogeneous (n=5)"
             , "HMM-block (n=4)"
             , "HMM-hourly (n=3)"
             , "HMM-quadratic (n=5)"
             , "HMM-sin (n=4)"
             , "Observed"
             , "Viterbi homogenous (n=3)")
combdf <- (rbind(avgdf,vitdf2)
           %>% transmute(time=time,model=variable,steplen=value)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2)
                      , smin=steplen,smax=steplen)
)

combdf2 <- rbind(combdf,obsdf)
linetypev <- c(rep(c(2,1),c(2,5))
                ,1,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"))
             ,"black","black"
            )

lwdvec <- c(rep(c(1),c(7))
             ,1,4
            )
alphavec <- c(rep(0,7)
               ,0.1,0
              )

shapevec <- c(rep(32,8),118)

avg_plot <- ggplot(combdf2,aes(x=time))
(avg_plot 
  + geom_ribbon(aes(ymin=smin,ymax=smax,alpha=model))
  + geom_line(aes(y=steplen,linetype=model,colour=model))
  + scale_colour_manual(values=colvec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + geom_point(aes(y=steplen,colour=model,shape=model,lwd=model))
  + scale_shape_manual(values=shapevec,name="Model")
  + ylab(expression('Mean step length'~(log[10]*m)))
  + xlab("Time of Day") 
)

@

\clearpage

<<acf_plot14, message=FALSE, echo=FALSE, warning=FALSE,fig.cap="Autocorrelation Plot for Cat 14">>=
acffun <- function(sim){
  a <- acf(sim,na.action=na.pass,plot=FALSE)
  df <- data.frame(ACF=c(a$acf),lag=a$lag)
  return(df)
}
vitacf <- (vit %>% dplyr::select(-c(time,obs))%>%ldply(.,acffun) %>% mutate(model=.id)
)

acfdf <- (readRDS("../summary_stats/cat.14.df.RDS")$acfdf 
          %>% mutate(model = .id)
)

combacfdf <- (rbind(acfdf,vitacf)
           %>% transmute(lag=lag,model=model,ACF=ACF)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2))
)


linetypev <- c(rep(c(2,1),c(2,6))
                ,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"),"black")
             ,"black"
            )
lwdvec <- c(rep(c(1,4),c(7,1))
             ,4
            )
alphavec <- c(rep(c(1,0.2),c(7,1))
               ,1
              )

shapevec <- c(rep(32,8),118)


(ggplot(combacfdf,aes(x=lag,y=ACF,colour=model,
                  lwd=model,alpha=model,linetype=model,shape=model))
  + geom_point()
  + geom_line()
  + xlab("Lag") 
  + ylab("Autocorrelation")
  + scale_shape_manual(values=shapevec, name="Model")
  + scale_colour_manual(values=colvec, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
) 

## vitacf messes up legend ...
@

\clearpage
%cat15

<<BICred_plot15,warning=FALSE,echo=FALSE,message=FALSE,fig.width=6,fig.height=4,fig.cap="Adjusted BIC Emission Distribution Comparison for Cat 15">>=

allmodsumdf2 <- readRDS("../summary_stats/cat.15.df.RDS")$multimoddf
df2 <- transform(allmodsumdf2, #change allmodsumdf to allmodsumdf2
            distrib=ifelse(grepl("W",model),"Weibull","log-Normal"),
            turn_angle=ifelse(grepl("VM",as.character(model)),"yes","no"),
            homog=ifelse(grepl("TH",type),"Time-heterogeneous","Homogeneous"))
slname <- "Step-length\ndistribution"
(ggplot(df2, aes(x=nstates,y=deltaBIC,size=distrib,
                 colour=distrib,lty=turn_angle))
    + geom_line()
    + facet_wrap(~ homog)
    + scale_colour_brewer(name=slname,palette="Set1")
    + scale_size_manual(name=slname,values=c(1.75,0.75))
    ## scale_size_continuous( name="# parameters") +
    #    geom_point(aes(size=parameters))+
    + scale_linetype(name="von Mises\nturning angle?")
    + labs(y=expression(Delta*"BIC"),
         x="Number of States")
    + geom_hline(yintercept=0,colour="gray")
    + zmargin)
@


\clearpage

<<adj_BIC_comparisons15, warning=FALSE, echo=FALSE, message=FALSE,,fig.width=8, fig.cap="Adjusted BICs Across All Models for Cat 15">>=
#L <- load("cat1sumdat.RData")

linetypev <- c(rep(2,2),rep(1,5))
sumdat <- transform(readRDS("../summary_stats/cat.15.df.RDS")$HMMsumdf,
                     mod = ifelse(type=="HMM + TH","HMM + TH","FMMs and HMM")
)
linetypev <- c(rep(2,2),rep(1,5))
(adj_BIC_plot <- ggplot(sumdat, aes(x=nstates
                                  , y=deltaBIC
                                  , colour=model
                                  , linetype=model
                                  , group=model))
   + facet_wrap(~mod,ncol = 2,scales = "free_x")
   + scale_size_continuous(name="# of states")
   # + scale_x_continuous(breaks=seq(0,300,by=30))
   + geom_point(aes(shape=factor(nstates),alpha=nstates))
   + scale_linetype_manual(values=linetypev, name="Model")
   + scale_colour_brewer(palette="Dark2", name="Model")
   + scale_shape_discrete(name="Number of states")
   + scale_alpha_continuous(name="Number of states")
   + labs(y=expression(paste(Delta, "BIC"))
          , x="Number of parameters") 
   + geom_line()
   + zmargin)
@

\clearpage

<<avg_step_length_by_time15, message=FALSE, echo=FALSE, warning=FALSE,fig.width=8,fig.cap="Diurnal Step Lengths Plot for Cat 15">>=

avgdf <- readRDS("../summary_stats/cat.15.df.RDS")$avgplotdf
obsdf <- (readRDS("../summary_stats/cat.15.RDS") 
  %>% dplyr::select(c(LogDist,Time)) 
  %>% filter(!is.na(LogDist)) 
  %>% group_by(Time) 
  %>% summarise_each(funs(mean,sd))
  %>% transmute(time=Time,model="Observed",steplen=mean,smin=mean-2*sd,smax=mean+2*sd)
)

vit <- readRDS("../summary_stats/cat.15.vit.RDS")
vitdf <- (vit %>% dplyr::select(c(viterbi,time))
  %>% group_by(time)
  %>% summarise_each(funs(mean))
  %>% mutate(model="homogeneous (n=3)")
)

vitdf2 <- vitdf %>% transmute(time=time,variable="viterbi",value=viterbi)

mnames <- c("fmm3","fmmsin4","hmm6","hmmblock4","hmmhourly3",
            "hmmquad5","hmmsin5","obs","viterbi")
mnames2 <- c("Fmm-homogeneous  (n=3)"
             , "Fmm-sin (n=4)"
             , "HMM-homogeneous (n=5)"
             , "HMM-block (n=4)"
             , "HMM-hourly (n=3)"
             , "HMM-quadratic (n=5)"
             , "HMM-sin (n=5)"
             , "Observed"
             , "Viterbi homogenous (n=3)")

combdf <- (rbind(avgdf,vitdf2)
           %>% transmute(time=time,model=variable,steplen=value)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2)
                      , smin=steplen,smax=steplen)
)

combdf2 <- rbind(combdf,obsdf)
linetypev <- c(rep(c(2,1),c(2,5))
                ,1,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"))
             ,"black","black"
            )

lwdvec <- c(rep(c(1),c(7))
             ,1,4
            )
alphavec <- c(rep(0,7)
               ,0.1,0
              )

shapevec <- c(rep(32,8),118)

avg_plot <- ggplot(combdf2,aes(x=time))
(avg_plot 
  + geom_ribbon(aes(ymin=smin,ymax=smax,alpha=model))
  + geom_line(aes(y=steplen,linetype=model,colour=model))
  + scale_colour_manual(values=colvec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + geom_point(aes(y=steplen,colour=model,shape=model,lwd=model))
  + scale_shape_manual(values=shapevec,name="Model")
  + ylab(expression('Mean step length'~(log[10]*m)))
  + xlab("Time of Day") 
)

@

\clearpage

<<acf_plot15, message=FALSE, echo=FALSE, warning=FALSE,fig.cap="Autocorrelation Plot for Cat 15">>=
acffun <- function(sim){
  a <- acf(sim,na.action=na.pass,plot=FALSE)
  df <- data.frame(ACF=c(a$acf),lag=a$lag)
  return(df)
}
vitacf <- (vit %>% dplyr::select(-c(time,obs))%>%ldply(.,acffun) %>% mutate(model=.id)
)

acfdf <- (readRDS("../summary_stats/cat.15.df.RDS")$acfdf 
          %>% mutate(model = .id)
)

combacfdf <- (rbind(acfdf,vitacf)
           %>% transmute(lag=lag,model=model,ACF=ACF)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2))
)
combacfdf <- (rbind(acfdf,vitacf)
           %>% transmute(lag=lag,model=model,ACF=ACF)
           %>% filter(model %in% mnames)
           %>% mutate(model=factor(model,levels=mnames,labels=mnames2))
)


linetypev <- c(rep(c(2,1),c(2,6))
                ,0
               )
colvec <- c(c(brewer.pal(7,"Dark2"),"black")
             ,"black"
            )
lwdvec <- c(rep(c(1,4),c(7,1))
             ,4
            )
alphavec <- c(rep(c(1,0.2),c(7,1))
               ,1
              )

shapevec <- c(rep(32,8),118)


(ggplot(combacfdf,aes(x=lag,y=ACF,colour=model,
                  lwd=model,alpha=model,linetype=model,shape=model))
  + geom_point()
  + geom_line()
  + xlab("Lag") 
  + ylab("Autocorrelation")
  + scale_shape_manual(values=shapevec, name="Model")
  + scale_colour_manual(values=colvec, name="Model")
  + scale_alpha_manual(values=alphavec, name="Model")
  + scale_size_manual(values=lwdvec, name="Model")
  + scale_linetype_manual(values=linetypev, name="Model")
) 

## vitacf messes up legend ...
@

\end{document}
